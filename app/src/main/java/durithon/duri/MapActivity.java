package durithon.duri;import android.app.FragmentManager;import android.content.Intent;import android.content.pm.PackageManager;import android.content.res.Resources;import android.graphics.Color;import android.os.Bundle;import android.support.v4.app.ActivityCompat;import android.support.v4.app.FragmentTransaction;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.widget.TextView;import com.google.android.gms.maps.*;import com.google.android.gms.maps.MapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.Marker;import com.google.android.gms.maps.model.MarkerOptions;import com.google.android.gms.maps.model.PolylineOptions;import java.util.ArrayList;public class MapActivity extends AppCompatActivity implements OnMapReadyCallback {    TextView btn_map_history;    GoogleMap map ;    ArrayList<LatLng> routePoints;    Marker marker;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_map);        routePoints =new ArrayList<LatLng>();        FragmentManager fragmentManager = getFragmentManager();        com.google.android.gms.maps.MapFragment mapFragment = (MapFragment) fragmentManager                .findFragmentById(R.id.map);        mapFragment.getMapAsync(this);        btn_map_history = (TextView) findViewById(R.id.btn_map_history);        btn_map_history.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                startActivity(new Intent(MapActivity.this, MapHistoryListActivity.class));            }        });    }    @Override    public void onMapReady(GoogleMap map) {        this.map = map;        LatLng SEOUL = new LatLng(37.56, 126.97);        MarkerOptions markerOptions = new MarkerOptions();        markerOptions.position(SEOUL);        markerOptions.title("서울");        markerOptions.snippet("한국의 수도");        map.addMarker(markerOptions);        map.moveCamera(CameraUpdateFactory.newLatLng(SEOUL));        map.animateCamera(CameraUpdateFactory.zoomTo(10));        ArrayList<LatLng> testArray =new ArrayList<LatLng>();        testArray.add(new LatLng(37.581501, 127.002482));        testArray.add(new LatLng(37.581305, 127.002493));        testArray.add(new LatLng(37.581305, 127.002493));        testArray.add(new LatLng(37.580888, 127.002418));        testArray.add(new LatLng(37.580607, 127.002375));        testArray.add(new LatLng(37.579440, 127.002363));        for (int i = 0; i<testArray.size();i++) {            display(testArray.get(i));        }    }public void display(LatLng latLng){    if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION)            != PackageManager.PERMISSION_GRANTED            && ActivityCompat.checkSelfPermission(this,            android.Manifest.permission.ACCESS_COARSE_LOCATION)            != PackageManager.PERMISSION_GRANTED) {        return;    }    //mylocation버튼 활성화    map.setMyLocationEnabled(true);    //현재 위치 정보 얻기    if (marker != null) {        marker.remove();    }    MarkerOptions markerOption = new MarkerOptions().position(latLng).title("Hello Maps ");    //카메라 업데이트 최근 좌표로 설정, 카메라 줌인 17로 설정    CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(latLng, 17);//실제 이동    map.animateCamera(cameraUpdate);//마커옵션에 따라 마커 생성    marker = map.addMarker(markerOption);//routePoint arraylist에 좌표값 추가    routePoints.add(latLng);    Log.i("marker", "routePoint.add" + routePoints.size());    //추가된 정보로 선그리기    drawPrimaryLinePath(routePoints);}    private void drawPrimaryLinePath(ArrayList<LatLng> routePoints) {        //추가된 위치 데이터 정보로 polyline 그리기        if (map == null) {            return;        }        if (routePoints.size() < 2) {            return;        }        PolylineOptions options = new PolylineOptions();        options.color(Color.parseColor("#ff5027"));        options.width(15);        options.visible(true);        for (LatLng locRecorded : routePoints) {            options.add(new LatLng(locRecorded.latitude, locRecorded.longitude));        }        map.addPolyline(options);    }}